type Session @model @auth(rules: [{allow: owner}, {allow: private, provider: iam}, {allow: public, provider: apiKey, operations: [create]}]) {
  id: ID!
  userID: String!
  owner: String!
  timestamp: AWSDateTime!
  durationSeconds: Int
  emgS3Key: String
  emgProcessedS3Key: String
  imuS3Key: String
  workoutType: String
  notes: String
  emg_ch1_peakRMS: Float
  emg_ch1_averageRMS: Float
  emg_ch1_fatigueIndex: Float
  emg_ch1_elasticityIndex: Float
  emg_ch1_activationRatio: Float
  emg_ch1_medianFrequency: Float
  emg_ch1_meanFrequency: Float
  emg_ch1_signalToNoiseRatio: Float
  emg_ch1_baselineDrift: Float
  emg_ch1_zeroCrossingRate: Float
  emg_ch1_rateOfRise: Float
  emg_ch1_rateOfFall: Float
  emg_ch1_rfdAnalog: Float
  emg_ch1_snrTimeRaw: Float
  emg_ch1_snrTimeDenoised: Float
  emg_ch1_snrFreqRaw: Float
  emg_ch1_snrFreqDenoised: Float

  emg_ch2_peakRMS: Float
  emg_ch2_averageRMS: Float
  emg_ch2_fatigueIndex: Float
  emg_ch2_elasticityIndex: Float
  emg_ch2_activationRatio: Float
  emg_ch2_medianFrequency: Float
  emg_ch2_meanFrequency: Float
  emg_ch2_signalToNoiseRatio: Float
  emg_ch2_baselineDrift: Float
  emg_ch2_zeroCrossingRate: Float
  emg_ch2_rateOfRise: Float
  emg_ch2_rateOfFall: Float
  emg_ch2_rfdAnalog: Float
  emg_ch2_snrTimeRaw: Float
  emg_ch2_snrTimeDenoised: Float
  emg_ch2_snrFreqRaw: Float
  emg_ch2_snrFreqDenoised: Float

}

type Article @model @auth(rules: [{allow: public, operations: [read]}, {allow: groups, groups: ["Editors"], operations: [read, create, update, delete]}]) {
  id: ID!
  title: String!
  content: String!
  author: String!
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
  imageUrl: String
  summary: String
  tags: [String!]!
  readTime: Int!
  isPublished: Boolean!
}

type SleeveConfig @model @auth(rules: [{allow: private}]) {
  id: ID!
  deviceType: String!
  side: String!
  channelLabels: [String!]!
  deviceNameContains: String
}
 
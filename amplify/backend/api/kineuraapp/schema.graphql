type Session @model
  @auth(rules: [
    { allow: owner },                         # App users (Cognito)
    { allow: private, provider: iam }         # Lambda or backend (IAM)
    { allow: public, provider: apiKey, operations: [create] }  # ðŸ‘ˆ Allow Lambda via API key
  ]) {
  id: ID!
  userID: String!
  owner: String!          # â˜… add this line
  timestamp: AWSDateTime!
  durationSeconds: Int
  emgS3Key: String
  emgProcessedS3Key: String
  imuS3Key: String
  workoutType: String
  notes: String
  peakRMS: Float
  averageRMS: Float
  fatigueIndex: Float
  elasticityIndex: Float
  activationRatio: Float
  medianFrequency: Float
  meanFrequency: Float
  signalToNoiseRatio: Float
  baselineDrift: Float
  zeroCrossingRate: Float

   # ðŸš€ Add these:
  rateOfRise: Float
  rateOfFall: Float
  rfdAnalog: Float
  snrTimeRaw: Float
  snrTimeDenoised: Float
  snrFreqRaw: Float
  snrFreqDenoised: Float
}


type Article @model
  @auth(rules: [
    { allow: public, operations: [read] }
    { allow: groups, groups: ["Editors"], operations: [read, create, update, delete] }
  ]) {
  id: ID!
  title: String!
  content: String!
  author: String!
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
  imageUrl: String
  summary: String
  tags: [String!]!
  readTime: Int!
  isPublished: Boolean!
}
